services:
  postgres:
    image: postgres
    container_name: postgres-bot
    restart: always
    env_file:
      - .env
    volumes:
      - bot_db:/var/lib/postgresql/data
    ports:
      - 5434:5432

  adminer:
    image: adminer
    container_name: adminer-bot
    restart: always
    ports:
      - 8082:8080

  bot:
    container_name: bot
    platform: linux/x86_64
    build:
      context: .
      dockerfile: ./apps/bot/Dockerfile
    restart: always

    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/schedule_bot
    env_file: .env
    depends_on:
      - postgres

  api:
    container_name: bot-api
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    restart: always
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/schedule_bot
    env_file: .env
    depends_on:
      - postgres

  admin-panel:
    container_name: bot-admin-panel
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./apps/admin-panel/Dockerfile
    restart: always
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/schedule_bot
      - NEXT_PUBLIC_API_URL=http://bot-api:3500
    env_file: .env
    depends_on:
      - postgres

volumes:
  bot_db:
    external: true

networks:
  default:
